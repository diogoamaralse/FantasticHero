// <auto-generated />
using System;
using FantasticHero.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FantasticHero.Data.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20210418181236_Demo")]
    partial class Demo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("FantasticHero.Data.Adventure.Hero", b =>
                {
                    b.Property<Guid>("CoreObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BagCoreObjectID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GamezoneCoreObjectID")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("HeroTypeCoreObjectID")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ItemCoreObjectID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Option")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoreObjectID");

                    b.HasIndex("BagCoreObjectID");

                    b.HasIndex("GamezoneCoreObjectID");

                    b.HasIndex("HeroTypeCoreObjectID");

                    b.HasIndex("ItemCoreObjectID");

                    b.ToTable("Heros");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Hero");

                    b.HasData(
                        new
                        {
                            CoreObjectID = new Guid("e0c14e3f-b76a-4df2-8f1c-08a49bda77ef"),
                            Name = "Super Man",
                            Option = 1,
                            Speed = 0
                        },
                        new
                        {
                            CoreObjectID = new Guid("b92d19b8-1cb8-4de8-a8ac-a225e0fc6f57"),
                            Name = "Invisible Woman",
                            Option = 2,
                            Speed = 0
                        },
                        new
                        {
                            CoreObjectID = new Guid("c3951d14-32bb-4055-b20f-cc50ab2a72be"),
                            Name = "Allien",
                            Option = 3,
                            Speed = 0
                        });
                });

            modelBuilder.Entity("FantasticHero.Data.Adventure.HeroType", b =>
                {
                    b.Property<Guid>("CoreObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("HeroTypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("CoreObjectID");

                    b.ToTable("HeroType");

                    b.HasData(
                        new
                        {
                            CoreObjectID = new Guid("5939eef6-17fd-4609-adec-7fa44a2cb619"),
                            HeroTypeName = "Tragic"
                        },
                        new
                        {
                            CoreObjectID = new Guid("b830c6fb-8c50-42f2-a204-43f4fc1b4cc1"),
                            HeroTypeName = "Superhero"
                        },
                        new
                        {
                            CoreObjectID = new Guid("5b782544-77ef-4ac6-a2df-6b7f0fffaf46"),
                            HeroTypeName = "Epic"
                        });
                });

            modelBuilder.Entity("FantasticHero.Data.Adventure.Item", b =>
                {
                    b.Property<Guid>("CoreObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Itens")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoreObjectID");

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("FantasticHero.Data.Gamezone", b =>
                {
                    b.Property<Guid>("CoreObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Option")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("PlayerCoreObjectID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScenarioName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoreObjectID");

                    b.HasIndex("PlayerCoreObjectID");

                    b.ToTable("GameZones");

                    b.HasData(
                        new
                        {
                            CoreObjectID = new Guid("457bcc00-fa3a-4266-a13c-4af4d760160e"),
                            Height = 30,
                            Option = 1,
                            ScenarioName = "Mars",
                            Width = 50
                        },
                        new
                        {
                            CoreObjectID = new Guid("355203df-200b-4d54-9ece-43d95e472da2"),
                            Height = 25,
                            Option = 2,
                            ScenarioName = "Saturn",
                            Width = 40
                        },
                        new
                        {
                            CoreObjectID = new Guid("5ca76bf2-abf2-48ef-95d6-1aa43ec13c89"),
                            Height = 50,
                            Option = 3,
                            ScenarioName = "Jupiter",
                            Width = 30
                        },
                        new
                        {
                            CoreObjectID = new Guid("191caaaf-b45a-4b5b-9d7b-aaa5581a42ad"),
                            Height = 60,
                            Option = 4,
                            ScenarioName = "Uranus",
                            Width = 60
                        });
                });

            modelBuilder.Entity("FantasticHero.Data.Monster", b =>
                {
                    b.Property<Guid>("CoreObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GamezoneCoreObjectID")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ItemCoreObjectID")
                        .HasColumnType("TEXT");

                    b.Property<string>("MonsterName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Option")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoreObjectID");

                    b.HasIndex("GamezoneCoreObjectID");

                    b.HasIndex("ItemCoreObjectID");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("FantasticHero.Data.Player", b =>
                {
                    b.HasBaseType("FantasticHero.Data.Adventure.Hero");

                    b.Property<string>("CharacterName")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Player");
                });

            modelBuilder.Entity("FantasticHero.Data.Bag", b =>
                {
                    b.HasBaseType("FantasticHero.Data.Adventure.Item");

                    b.HasDiscriminator().HasValue("Bag");
                });

            modelBuilder.Entity("FantasticHero.Data.Adventure.Hero", b =>
                {
                    b.HasOne("FantasticHero.Data.Bag", "Bag")
                        .WithMany()
                        .HasForeignKey("BagCoreObjectID");

                    b.HasOne("FantasticHero.Data.Gamezone", null)
                        .WithMany("Heros")
                        .HasForeignKey("GamezoneCoreObjectID");

                    b.HasOne("FantasticHero.Data.Adventure.HeroType", "HeroType")
                        .WithMany()
                        .HasForeignKey("HeroTypeCoreObjectID");

                    b.HasOne("FantasticHero.Data.Adventure.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCoreObjectID");

                    b.Navigation("Bag");

                    b.Navigation("HeroType");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("FantasticHero.Data.Gamezone", b =>
                {
                    b.HasOne("FantasticHero.Data.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerCoreObjectID");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FantasticHero.Data.Monster", b =>
                {
                    b.HasOne("FantasticHero.Data.Gamezone", null)
                        .WithMany("Monster")
                        .HasForeignKey("GamezoneCoreObjectID");

                    b.HasOne("FantasticHero.Data.Adventure.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCoreObjectID");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("FantasticHero.Data.Gamezone", b =>
                {
                    b.Navigation("Heros");

                    b.Navigation("Monster");
                });
#pragma warning restore 612, 618
        }
    }
}
